---
features:
  - puppet-agent

groups:
  - name: 'gentoo'
    groups:
    - name: 'servers'
      targets:
        - _plugin: puppetdb
          query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.role = 'server' and certname != 'builder' }"
          target_mapping:
            name: certname
            uri: facts.fqdn
    - name: 'workstations'
      targets:
        - _plugin: puppetdb
          query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.role = 'workstation' and certname != 'builder' }"
          target_mapping:
            name: certname
            uri: facts.fqdn

  - name: 'amd64'
    groups:
    - name: 'haswell'
      groups:
      - name: 'haswell-servers'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.platform = 'haswell' and facts.profile.role = 'server' and certname != 'builder' }"
            target_mapping:
              name: certname
              uri: facts.fqdn
      - name: 'haswell-workstations'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.platform = 'haswell' and facts.profile.role = 'workstation' and certname != 'builder' }"
            target_mapping:
              name: certname
              uri: facts.fqdn
    - name: 'amd64-servers'
      targets:
        - _plugin: puppetdb
          query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.architecture = 'amd64' and facts.profile.role = 'server' and certname != 'builder' }"
          target_mapping:
            name: certname
            uri: facts.fqdn
    - name: 'amd64-workstations'
      targets:
        - _plugin: puppetdb
          query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.architecture = 'amd64' and facts.profile.role = 'workstation' and certname != 'builder' }"
          target_mapping:
            name: certname
            uri: facts.fqdn

  - name: 'arm64'
    groups:
    - name: 'pinebookpro'
      groups:
      - name: 'pinebookpro-servers'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.platform = 'pinebookpro' and facts.profile.role = 'server' and certname != 'builder' }"
            target_mapping:
              name: certname
              uri: facts.fqdn
      - name: 'pinebookpro-workstations'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.platform = 'pinebookpro' and facts.profile.role = 'workstation' and certname != 'builder' }"
            target_mapping:
              name: certname
              uri: facts.fqdn
    - name: 'raspberrypi'
      groups:
      - name: 'raspberrypi-servers'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.platform = 'raspberrypi' and facts.profile.role = 'server' and certname != 'builder' }"
            target_mapping:
              name: certname
              uri: facts.fqdn
      - name: 'raspberrypi-workstations'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.platform = 'raspberrypi' and facts.profile.role = 'workstation' and certname != 'builder' }"
            target_mapping:
              name: certname
              uri: facts.fqdn
    - name: 'sopine'
      groups:
      - name: 'sopine-servers'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.platform = 'sopine' and facts.profile.role = 'server' and certname != 'builder' }"
            target_mapping:
              name: certname
              uri: facts.fqdn
    - name: 'arm64-servers'
      targets:
        - _plugin: puppetdb
          query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.architecture = 'aarch64' and facts.profile.role = 'server' and certname != 'builder' }"
          target_mapping:
            name: certname
            uri: facts.fqdn
    - name: 'arm64-workstations'
      targets:
        - _plugin: puppetdb
          query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.architecture = 'aarch64' and facts.profile.role = 'workstation' and certname != 'builder' }"
          target_mapping:
            name: certname
            uri: facts.fqdn

  - name: 'arm'
    groups:
    - name: 'beagleboneblack'
      groups:
      - name: 'beagleboneblack-servers'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.profile.platform = 'beagleboneblack' and facts.profile.role = 'server' and certname != 'builder' }"
            target_mapping:
              name: certname
              uri: facts.fqdn
    - name: 'arm-servers'
      targets:
        - _plugin: puppetdb
          query: "inventory[certname] { facts.osfamily = 'Gentoo' and facts.architecture = 'armv7l' and facts.profile.role = 'server' and certname != 'builder' }"
          target_mapping:
            name: certname
            uri: facts.fqdn

  - name: 'eyrie'
    groups:
      - name: 'eyrie-control-plane'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { certname = 'eagle' }"
            target_mapping:
              name: certname
              uri: facts.fqdn
      - name: 'eyrie-workers'
        targets:
          - _plugin: puppetdb
            query: "inventory[certname] { certname ~ '^eyas\\d+' }"
            target_mapping:
              name: certname
              uri: facts.fqdn

  - name: 'puppet-server'
    targets:
      - _plugin: puppetdb
        query: "resources[certname] { type = 'Class' and title = 'Nest::Service::Puppet' limit 1 }"
        target_mapping:
          name: certname
          uri: facts.fqdn

  - name: 'windows'
    targets:
      - _plugin: puppetdb
        query: "inventory[certname] { facts.osfamily = 'windows' }"
        target_mapping:
          name: certname
          uri: facts.fqdn
