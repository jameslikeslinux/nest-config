#!/usr/bin/env zsh
#
# Nest Build
#
# Wrap nest::build plans with shell hooks to stop build containers
# when interrupted.
#

if (( $# < 2 )); then
    print "Usage: $0 BUILD NAME [args...]" >&2
    print "  e.g. $0 stage1 haswell-workstation deploy=true" >&2
    exit 1
fi

cd "$(dirname "$(readlink -f "$0")")/.."

build=$1; shift
name=$1; shift
container="nest-${build}-${name}"

case $build in
    stage0)
        extra_args=("cpu=${name}")
        ;;
    stage1)
        cpu=${name%-*}
        role=${name##*-}
        extra_args=("cpu=${cpu}" "role=${role}")
        ;;
    stage2)
        platform=${name%-*}
        role=${name##*-}
        extra_args=("platform=${platform}" "role=${role}")
        ;;
    stage3)
        branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null) # ok to be empty
        puppet_environment=${branch//[^a-zA-Z0-9_]/_}
        extra_args=("hostname=${name}" "puppet_environment=${puppet_environment}")
        ;;
    bolt|chromium|pdk)
        extra_args=("cpu=${name}")
        ;;
    r10k)
        build=tool
        extra_args=("cpu=${name}" 'tool=r10k')
        ;;
    *)
        print "Invalid build: ${build}" >&2
        exit 1
        ;;
esac

[[ $UID -eq 0 ]] && runcmd='env' || runcmd='sudo'

exec $runcmd BOLT_CLEANUP_CMD="podman stop ${container} >&/dev/null" \
    ./bin/bolt-wrapper plan run nest::build::${build} container="$container" $extra_args "$@" --stream