---
.placement: &placement
  nodeAffinity: &affinity
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: role
            operator: In
            values:
              - storage
  tolerations: &tolerations
    - key: role
      operator: Equal
      value: storage
      effect: NoSchedule

resources:
  # Disable Nest backup
  backup: {}

  # Define cert for dashboard
  certificate:
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: ceph-dashboard-cert
      namespace: "%{nest::kubernetes::namespace}"
    spec:
      secretName: ceph-dashboard-cert
      issuerRef:
        name: eyrie-ca
        kind: ClusterIssuer
      dnsNames:
        - ceph.eyrie

  # Deploy NFS server for apps incompatible with CephFS
  # See: https://rook.github.io/docs/rook/latest-release/Storage-Configuration/NFS/nfs-csi-driver/
  # nfs:
  #   apiVersion: ceph.rook.io/v1
  #   kind: CephNFS
  #   metadata:
  #     name: ceph-nfs
  #     namespace: "%{nest::kubernetes::namespace}"
  #   spec:
  #     server:
  #       active: 1
  #       placement: *placement
  # storageclass:
  #   apiVersion: storage.k8s.io/v1
  #   kind: StorageClass
  #   metadata:
  #     name: ceph-nfs
  #   provisioner: rook-ceph.nfs.csi.ceph.com # csi-provisioner-name
  #   parameters:
  #     nfsCluster: ceph-nfs
  #     server: rook-ceph-nfs-ceph-nfs-a
  #     clusterID: "%{nest::kubernetes::namespace}"
  #     fsName: ceph-filesystem
  #     pool: ceph-filesystem-data0
  #     csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
  #     csi.storage.k8s.io/provisioner-secret-namespace: "%{nest::kubernetes::namespace}"
  #     csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
  #     csi.storage.k8s.io/controller-expand-secret-namespace: "%{nest::kubernetes::namespace}"
  #     csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
  #     csi.storage.k8s.io/node-stage-secret-namespace: "%{nest::kubernetes::namespace}"
  #   reclaimPolicy: Delete
  #   allowVolumeExpansion: true

values:
  monitoring:
    enabled: true
  cephClusterSpec:
    cephVersion:
      # Workaround known issue with 18.2.4 on ARM64
      # See: https://github.com/rook/rook/issues/14502
      image: quay.io/ceph/ceph:v18.2.2
    placement:
      all: *placement
    storage:
      useAllDevices: false
      devices:
        - name: /dev/zvol/data/crypt/ceph
    dashboard:
      prometheusEndpoint: http://rook-ceph-monitoring-kube-prometheus:9090
      ssl: false
  ingress:
    dashboard:
      host:
        name: ceph.eyrie
      tls:
        - hosts:
          - ceph.eyrie
          secretName: ceph-dashboard-cert
      ingressClassName: nginx
  toolbox:
    enabled: true
    tolerations: *tolerations
    affinity: *affinity

patches:
  # Force these services onto storage nodes
  # (patch because it's not easy to access with values)
  10-placement:
    - patch:
      - op: add
        path: '/spec/metadataServer/placement'
        value: *placement
      target:
        group: ceph.rook.io
        version: v1
        kind: CephFilesystem
    - patch:
      - op: add
        path: '/spec/gateway/placement'
        value: *placement
      target:
        group: ceph.rook.io
        version: v1
        kind: CephObjectStore

  # Remove resource requirements on these small, dedicated nodes
  10-resources:
    - patch:
        - op: remove
          path: '/spec/resources'
      target:
        group: ceph.rook.io
        version: v1
        kind: CephCluster
    - patch:
        - op: remove
          path: '/spec/metadataServer/resources'
      target:
        group: ceph.rook.io
        version: v1
        kind: CephFilesystem
    - patch:
        - op: remove
          path: '/spec/gateway/resources'
      target:
        group: ceph.rook.io
        version: v1
        kind: CephObjectStore
